{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://excel-custom-functions/webpack/bootstrap","webpack://excel-custom-functions/webpack/runtime/global","webpack://excel-custom-functions/webpack/runtime/hasOwnProperty shorthand","webpack://excel-custom-functions/webpack/runtime/publicPath","webpack://excel-custom-functions/webpack/runtime/jsonp chunk loading","webpack://excel-custom-functions/./src/utils/logger.ts","webpack://excel-custom-functions/./src/api/octagonApi.ts","webpack://excel-custom-functions/./src/api/types.ts","webpack://excel-custom-functions/./src/api/agents.ts","webpack://excel-custom-functions/./src/utils/browserSupport.ts","webpack://excel-custom-functions/./src/taskpane/taskpane.ts","webpack://excel-custom-functions/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/**\n * Logging utility for Octagon Excel Add-in\n * This module provides centralized logging functionality with different log levels\n * to help debug issues during development and production.\n */\n\n// Log levels\nexport enum LogLevel {\n  DEBUG = 'DEBUG',\n  INFO = 'INFO',\n  WARN = 'WARN',\n  ERROR = 'ERROR'\n}\n\n// Current log level - can be adjusted based on environment\nlet currentLogLevel: LogLevel = \n  process.env.NODE_ENV === 'production' ? LogLevel.ERROR : LogLevel.DEBUG;\n\n// Log level priority (used to determine if a message should be logged)\nconst logLevelPriority: Record<LogLevel, number> = {\n  [LogLevel.DEBUG]: 0,\n  [LogLevel.INFO]: 1,\n  [LogLevel.WARN]: 2,\n  [LogLevel.ERROR]: 3\n};\n\n/**\n * Main logging function that handles all log levels\n */\nexport function log(level: LogLevel, message: string, data?: any): void {\n  // Only log if the current level priority is less than or equal to the message level\n  if (logLevelPriority[level] >= logLevelPriority[currentLogLevel]) {\n    const timestamp = new Date().toISOString();\n    const formattedMessage = `[${timestamp}] [${level}] ${message}`;\n\n    switch (level) {\n      case LogLevel.DEBUG:\n        console.debug(formattedMessage, data || '');\n        break;\n      case LogLevel.INFO:\n        console.info(formattedMessage, data || '');\n        break;\n      case LogLevel.WARN:\n        console.warn(formattedMessage, data || '');\n        break;\n      case LogLevel.ERROR:\n        console.error(formattedMessage, data || '');\n        break;\n    }\n  }\n}\n\n/**\n * Set the current log level\n */\nexport function setLogLevel(level: LogLevel): void {\n  currentLogLevel = level;\n  log(LogLevel.INFO, `Log level set to ${level}`);\n}\n\n/**\n * Get all logs stored in session storage\n */\nexport function getLogs(): any[] {\n  try {\n    return JSON.parse(sessionStorage.getItem('octagon_logs') || '[]');\n  } catch (e) {\n    console.error('[Logger] Error retrieving logs from sessionStorage:', e);\n    return [];\n  }\n}\n\n/**\n * Clear all logs in session storage\n */\nexport function clearLogs(): void {\n  try {\n    sessionStorage.removeItem('octagon_logs');\n  } catch (e) {\n    // Log the error instead of silently failing\n    console.error('[Logger] Error clearing logs from sessionStorage:', e);\n  }\n}\n\n// Convenience methods for each log level\nexport const debug = (message: string, data?: any) => log(LogLevel.DEBUG, message, data);\nexport const info = (message: string, data?: any) => log(LogLevel.INFO, message, data);\nexport const warn = (message: string, data?: any) => log(LogLevel.WARN, message, data);\nexport const error = (message: string, data?: any) => log(LogLevel.ERROR, message, data);\n\n// Export a default logger object\nexport default {\n  debug,\n  info,\n  warn,\n  error,\n  setLogLevel,\n  getLogs,\n  clearLogs\n};","/**\r\n * Octagon API Service Defintions\r\n * This service handles all communication with the Octagon API using OpenAI-compatible endpoints.\r\n * It provides methods to query agents using the chat/completions pattern.\r\n */\r\n\r\nimport {\r\n  ApiResponse,\r\n  AgentFullResponse,\r\n  StreamResponse\r\n} from './types';\r\nimport Logger from '../utils/logger';\r\n\r\n// API Configuration\r\nconst DEFAULT_API_URL = 'https://api-gateway.octagonagents.com/v1';\r\n\r\n// SessionStorage key constants\r\nconst API_KEY_STORAGE_NAME = 'octagon_api_key';\r\nconst CACHED_SESSION_SETTINGS_KEY = 'CachedSessionSettings';\r\n\r\n/**\r\n * OctagonApiService class handles all API interactions\r\n */\r\nexport class OctagonApiService {\r\n  private apiKey: string | null = null;\r\n  private apiUrl: string;\r\n  private isOfficeInitialized: boolean = false;\r\n  \r\n  constructor(apiUrl: string = DEFAULT_API_URL) {\r\n    this.apiUrl = apiUrl;\r\n    // Don't automatically initialize in constructor to avoid race conditions\r\n    // Instead, require explicit initialization after Office.onReady\r\n    Logger.info(`OctagonApiService created with API URL: ${this.apiUrl}`);\r\n  }\r\n  \r\n  /**\r\n   * Initialize the service after Office is ready\r\n   * This should be called after Office.onReady completes\r\n   */\r\n  public initialize(): void {\r\n    this.isOfficeInitialized = true;\r\n    this.loadApiKey();\r\n    Logger.info(`OctagonApiService fully initialized. API key status: ${this.isAuthenticated() ? 'Available' : 'Not available'}`);\r\n  }\r\n  \r\n  /**\r\n   * Check if API key exists in SessionStorage\r\n   * @returns boolean True if API key is found in SessionStorage\r\n   */\r\n  public checkForStoredApiKey(): boolean {\r\n    try {\r\n      // Check if we have a cached session settings with an API key\r\n      const cachedSessionData = sessionStorage.getItem(CACHED_SESSION_SETTINGS_KEY);\r\n      if (cachedSessionData) {\r\n        const sessionData = JSON.parse(cachedSessionData);\r\n        if (sessionData && sessionData.octagon_api_key) {\r\n          Logger.info('Found API key in CachedSessionSettings');\r\n          return true;\r\n        }\r\n      }\r\n      \r\n      // Also check our direct storage\r\n      const directApiKey = sessionStorage.getItem(API_KEY_STORAGE_NAME);\r\n      if (directApiKey) {\r\n        Logger.info('Found API key in direct SessionStorage');\r\n        return true;\r\n      }\r\n    } catch (error) {\r\n      Logger.error('Error checking for stored API key', error);\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  /**\r\n   * Set the API key for authentication\r\n   */\r\n  public setApiKey(apiKey: string): void {\r\n    this.apiKey = apiKey;\r\n    this.saveApiKey(apiKey);\r\n  }\r\n  \r\n  /**\r\n   * Save API key to SessionStorage\r\n   */\r\n  private saveApiKey(apiKey: string): void {\r\n    try {\r\n      // Save to SessionStorage\r\n      sessionStorage.setItem(API_KEY_STORAGE_NAME, apiKey);\r\n      \r\n      // Also save to CachedSessionSettings for compatibility\r\n      try {\r\n        const cachedSessionData = sessionStorage.getItem(CACHED_SESSION_SETTINGS_KEY);\r\n        if (cachedSessionData) {\r\n          const sessionData = JSON.parse(cachedSessionData);\r\n          sessionData.octagon_api_key = apiKey;\r\n          sessionStorage.setItem(CACHED_SESSION_SETTINGS_KEY, JSON.stringify(sessionData));\r\n        } else {\r\n          // Create a new cached session settings object\r\n          const newSessionData = { octagon_api_key: apiKey };\r\n          sessionStorage.setItem(CACHED_SESSION_SETTINGS_KEY, JSON.stringify(newSessionData));\r\n        }\r\n      } catch (error) {\r\n        Logger.warn('Failed to save to CachedSessionSettings', error);\r\n      }\r\n      \r\n      Logger.info('API key saved to SessionStorage');\r\n    } catch (error) {\r\n      Logger.error('Failed to save API key to SessionStorage', error);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Call an Octagon agent with a prompt\r\n   * \r\n   * @param agentId - The ID of the agent to call\r\n   * @param prompt - The prompt to send to the agent\r\n   * @returns A promise that resolves to the agent's response\r\n   */\r\n  public async callAgent(agentId: string, prompt: string): Promise<ApiResponse<AgentFullResponse>> {\r\n    Logger.info(`callAgent invoked with agent: ${agentId}, prompt: ${prompt.substring(0, 50)}...`);\r\n    const requestData = {\r\n      model: agentId,\r\n      input: prompt,\r\n      stream: true\r\n    };\r\n    Logger.debug('callAgent request data:', requestData);\r\n    const response = await this.apiRequest<any>(`/responses`, 'POST', requestData, true);\r\n    if (!response.success) {\r\n      return response as ApiResponse<AgentFullResponse>;\r\n    }\r\n    return response as ApiResponse<AgentFullResponse>;\r\n  }\r\n  \r\n  /**\r\n   * Load API key from SessionStorage with a simplified approach\r\n   */\r\n  private loadApiKey(): void {\r\n    Logger.info('Attempting to load API key from SessionStorage');\r\n    \r\n    try {\r\n      // Try CachedSessionSettings first\r\n      const cachedSessionData = sessionStorage.getItem(CACHED_SESSION_SETTINGS_KEY);\r\n      if (cachedSessionData) {\r\n        try {\r\n          const sessionData = JSON.parse(cachedSessionData);\r\n          if (sessionData && sessionData.octagon_api_key) {\r\n            this.apiKey = sessionData.octagon_api_key;\r\n            Logger.info('API key loaded from CachedSessionSettings');\r\n            return;\r\n          }\r\n        } catch (parseError) {\r\n          Logger.warn('Failed to parse CachedSessionSettings', parseError);\r\n        }\r\n      }\r\n      \r\n      // Fallback to direct storage\r\n      const directApiKey = sessionStorage.getItem(API_KEY_STORAGE_NAME);\r\n      if (directApiKey) {\r\n        this.apiKey = directApiKey;\r\n        Logger.info('API key loaded from direct SessionStorage');\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      Logger.error('Failed to load API key from SessionStorage', error);\r\n    }\r\n    \r\n    // If we get here, no API key was found\r\n    Logger.info('No API key found in SessionStorage');\r\n  }\r\n  \r\n  /**\r\n   * Check if the API key is set\r\n   */\r\n  public isAuthenticated(): boolean {\r\n    // Force reload of the API key to ensure we have the latest\r\n    if (!this.apiKey) {\r\n      this.loadApiKey();\r\n    }\r\n    const hasApiKey = !!this.apiKey && this.apiKey.trim() !== '';\r\n    return hasApiKey;\r\n  }\r\n  \r\n  /**\r\n   * Clear stored API key from all SessionStorage locations\r\n   */\r\n  public clearApiKey(): void {\r\n    this.apiKey = null;\r\n    \r\n    try {\r\n      // Clear direct API key storage\r\n      sessionStorage.removeItem(API_KEY_STORAGE_NAME);\r\n      \r\n      // Clear from CachedSessionSettings if it exists\r\n      const cachedSessionData = sessionStorage.getItem(CACHED_SESSION_SETTINGS_KEY);\r\n      if (cachedSessionData) {\r\n        try {\r\n          const sessionData = JSON.parse(cachedSessionData);\r\n          if (sessionData) {\r\n            delete sessionData.octagon_api_key;\r\n            sessionStorage.setItem(CACHED_SESSION_SETTINGS_KEY, JSON.stringify(sessionData));\r\n          }\r\n        } catch (parseError) {\r\n          Logger.warn('Failed to parse CachedSessionSettings for clearing', parseError);\r\n        }\r\n      }\r\n      \r\n      Logger.info('API key cleared from all SessionStorage locations');\r\n    } catch (error) {\r\n      Logger.error('Failed to clear API key from SessionStorage', error);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Generic method to make authenticated API requests\r\n   * Handles both regular JSON responses and streamed responses\r\n   */\r\n  private async apiRequest<T>(\r\n    endpoint: string, \r\n    method: string = 'POST', \r\n    data?: any,\r\n    stream: boolean = true\r\n  ): Promise<ApiResponse<T>> {\r\n    \r\n    if (!this.isAuthenticated()) {\r\n      Logger.error('API request failed: Not authenticated');\r\n      return {\r\n        success: false,\r\n        error: 'Not authenticated. Please set your API key first.'\r\n      };\r\n    }\r\n    \r\n    const url = `${this.apiUrl}${endpoint}`;\r\n    \r\n    try {\r\n      Logger.info(`Making ${method} request to ${url}`, data);\r\n      \r\n      const headers = new Headers({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${this.apiKey}`\r\n      });\r\n      \r\n      Logger.debug('Request headers:', {\r\n        contentType: headers.get('Content-Type'),\r\n        authorization: this.apiKey ? `Bearer ${this.apiKey.substring(0, 5)}...` : 'None'\r\n      });\r\n      \r\n      const requestBody = data ? JSON.stringify(data) : undefined;\r\n      Logger.debug('Request body:', requestBody);\r\n      \r\n      const response = await fetch(url, {\r\n        method,\r\n        headers,\r\n        body: requestBody\r\n      });\r\n      \r\n      Logger.info(`Response status: ${response.status} ${response.statusText}`);\r\n      \r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        Logger.error(`API request failed: ${response.status} ${response.statusText}`, errorText);\r\n        \r\n        return {\r\n          success: false,\r\n          error: `Request failed (${response.status}): ${errorText || response.statusText}`\r\n        };\r\n      }\r\n      \r\n      const streamedResponse = await this.handleStreamedResponse(response);\r\n      return streamedResponse as ApiResponse<T>;\r\n    \r\n    } catch (error) {\r\n      Logger.error('API request failed with exception', error);\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Unknown error occurred'\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle streamed responses from the Octagon API\r\n   * @param response - The fetch response object with streamed data\r\n   * @returns Parsed response data\r\n   */\r\n  private async handleStreamedResponse(response: Response): Promise<ApiResponse<any>> {\r\n    try {\r\n      // Get the reader for the stream\r\n      const reader = response.body?.getReader();\r\n      if (!reader) {\r\n        Logger.error('Response stream could not be read');\r\n        return { \r\n          success: false, \r\n          error: 'Response stream could not be read' \r\n        };\r\n      }\r\n\r\n      Logger.info('Processing streamed response');\r\n      \r\n      // Variables to collect the response\r\n      let fullText = '';\r\n      let finalResponse = null;\r\n      let parseErrorCount = 0; // Track number of parse errors\r\n      \r\n      // Process the stream\r\n      while (true) {\r\n        try {\r\n          const { done, value } = await reader.read();\r\n          if (done) break;\r\n          \r\n          // Convert the chunks to text\r\n          const chunk = new TextDecoder().decode(value);\r\n          Logger.debug('Received stream chunk:', chunk.substring(0, 100) + (chunk.length > 100 ? '...' : ''));\r\n          \r\n          // Process each line that starts with \"data: \"\r\n          const lines = chunk.split('\\n');\r\n          for (const line of lines) {\r\n            if (line.startsWith('data: ')) {\r\n              const jsonStr = line.substring(6); // Remove 'data: ' prefix\r\n              \r\n              // Check for the end of stream marker\r\n              if (jsonStr.trim() === '[DONE]') {\r\n                Logger.info('Stream completed [DONE] marker received');\r\n                continue;\r\n              }\r\n              \r\n              try {\r\n                const data = JSON.parse(jsonStr);\r\n                Logger.debug('Parsed stream data type:', data.type);\r\n                \r\n                // Process based on the type of data\r\n                if (data.type === 'response.completed') {\r\n                  // This is the final response with all data\r\n                  finalResponse = data.response;\r\n                  Logger.info('Final response received');\r\n                } else if (data.type === 'response.output_text.delta' || data.type === 'response.output_text.done') {\r\n                  // This is a text delta/update, append to our content\r\n                  if (data.delta) {\r\n                    fullText += data.delta;\r\n                  } else if (data.text) {\r\n                    fullText = data.text; // This is the complete text\r\n                  }\r\n                } else if (data.type === 'response.content_part.done' && data.part?.text) {\r\n                  // Content part with complete text\r\n                  fullText = data.part.text;\r\n                } else if (data.response && data.response.output) {\r\n                  // Store the full response data for direct access\r\n                  finalResponse = data.response;\r\n                }\r\n              } catch (parseError) {\r\n                parseErrorCount++;\r\n                Logger.warn(`Error parsing stream JSON (${parseErrorCount}): ${parseError} - ${jsonStr.substring(0, 100)}`);\r\n                \r\n                // If we hit too many parse errors, we might be dealing with a bad stream\r\n                if (parseErrorCount > 5) {\r\n                  Logger.error('Too many JSON parse errors in stream, aborting');\r\n                  throw new Error('Stream parsing failed: Too many JSON parse errors');\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } catch (streamError) {\r\n          Logger.error('Error processing stream chunk:', streamError);\r\n          throw streamError; // Rethrow to be caught by the outer try/catch\r\n        }\r\n      }\r\n      \r\n      // Ensure we have some content to return, even if it's empty\r\n      const transformedResponse = {\r\n        content: fullText || '',\r\n        id: finalResponse?.id || '',\r\n        model: finalResponse?.model || '',\r\n        created: finalResponse?.created_at || Date.now(),\r\n        // For compatibility with functions.ts, include the raw response\r\n        output: finalResponse?.output || [],\r\n        // Include full response data for more advanced processing if needed\r\n        rawResponse: finalResponse\r\n      };\r\n      \r\n      Logger.info('Streamed response processed successfully');\r\n      Logger.debug('Transformed response:', {\r\n        contentLength: transformedResponse.content.length,\r\n        hasId: !!transformedResponse.id,\r\n        hasModel: !!transformedResponse.model,\r\n        outputItems: transformedResponse.output.length\r\n      });\r\n      \r\n      return {\r\n        success: true,\r\n        data: transformedResponse\r\n      };\r\n    } catch (error) {\r\n      Logger.error('Error processing streamed response:', error);\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to process streamed response'\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Test API key validity with a simple request\r\n   */\r\n  public async testConnection(): Promise<ApiResponse<StreamResponse>> {\r\n    Logger.info('Testing API connection with stored key');\r\n    \r\n    // If no API key was loaded, return failure immediately\r\n    if (!this.isAuthenticated()) {\r\n      Logger.error('Test connection failed: No API key available');\r\n      return {\r\n        success: false,\r\n        error: 'No API key available for testing'\r\n      };\r\n    }\r\n    \r\n    // Use a simple, fast query to test the connection\r\n    try {\r\n      const model = 'octagon-agent'; // Default model for testing\r\n      const result = await this.apiRequest<any>('/responses', 'POST', {\r\n        model: model,\r\n        input: 'Test connection',\r\n        max_tokens: 10\r\n      }, true); // Add true for stream parameter\r\n      \r\n      Logger.info(`Test connection result: ${result.success ? 'Success' : 'Failed'}`);\r\n      \r\n      if (result.success) {\r\n        // Try to log the response format to help debugging\r\n        Logger.debug('Test connection response format:', {\r\n          hasContent: result.data && typeof result.data.content !== 'undefined',\r\n          hasChoices: result.data && Array.isArray(result.data.choices),\r\n          responseKeys: result.data ? Object.keys(result.data) : []\r\n        });\r\n      }\r\n      \r\n      return result;\r\n    } catch (error) {\r\n      Logger.error('Test connection threw an exception', error);\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Unknown error during connection test'\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Main method for agent interaction - OpenAI compatible\r\n   * Maps agent selection to model names and formats query as message array\r\n   */\r\n  public async ResponseEndpoint(\r\n    query: string,\r\n    model: string,\r\n    stream: boolean = true\r\n  ): Promise<ApiResponse<StreamResponse>> {\r\n    Logger.info('Making stream responses endpoint request', { query: query.substring(0, 100) + '...', model, stream });\r\n    \r\n    // Use the improved streaming response handling when stream is true\r\n    return this.apiRequest<StreamResponse>('/responses', 'POST', {\r\n      model: model,\r\n      input: query,\r\n      stream: stream\r\n    }, stream);\r\n  }\r\n    \r\n}\r\n\r\n// Export singleton instance\r\nexport const octagonApiService = new OctagonApiService();","/**\n * Octagon API TypeScript Interfaces\n * These interfaces define the contract between our Excel Add-in and the Octagon API.\n */\n\n// ==================== COMMON API TYPES ====================\n\n// Common API response structure\nexport interface ApiResponse<T> {\n  success: boolean;\n  data?: T;\n  error?: string;\n}\n\n// Generic agent response base\nexport interface AgentResponse {\n  query: string;\n  timestamp: string;\n  agent: AgentInfo | AgentListing;\n}\n\n// ==================== OPENAI COMPATIBLE TYPES ====================\n\n// OpenAI-style message structure\nexport interface ChatMessage {\n  role: 'system' | 'user' | 'assistant';\n  content: string;\n}\n\n// OpenAI-style chat completion request\nexport interface StreamRequest {\n  model: string;\n  messages: ChatMessage[];\n  temperature?: number;\n  max_tokens?: number;\n  stream?: boolean;\n}\n\n// OpenAI-style choice structure\nexport interface StreamChoice {\n  index: number;\n  message: ChatMessage;\n  finish_reason: 'stop' | 'length' | 'function_call' | 'content_filter' | null;\n}\n\n// OpenAI-style usage statistics\nexport interface StreamUsage {\n  prompt_tokens: number;\n  completion_tokens: number;\n  total_tokens: number;\n}\n\n// OpenAI-style responses endpoint response\nexport interface StreamResponse {\n  id: string;\n  object: 'responses';\n  created: number;\n  model: string;\n  choices: StreamChoice[];\n  usage?: StreamUsage;\n  // Adding new fields for Octagon specific response structure\n  content?: string;\n  output?: any[];\n  rawResponse?: any;\n  status?: string;\n  text?: any;\n}\n\n// ==================== AGENT TYPES ====================\n\nexport interface AgentInfo {\n  id: string;\n  displayName: string;\n  excelFormulaName: string;\n  description: string;\n  category: AgentCategory;\n  examplePrompt?: string;\n  usageExamples?: UsageExample[];\n}\n\nexport interface UsageExample {\n  topic: string;\n  prompt: string;\n}\n\nexport enum AgentCategory {\n  MarketIntelligence = 'Market Intelligence',\n  DeepResearch = 'Deep Research'\n}\n\nexport enum AgentListing {\n  OctagonAgent = 'octagon-agent',\n  ScraperAgent = 'octagon-scraper-agent',\n  DeepResearchAgent = 'octagon-deep-research-agent'\n}\n\n// ==================== REQUEST/RESPONSE TYPES ====================\n\n// Detailed agent response with content and structured data\nexport interface AgentFullResponse {\n  content: string;\n  // Additional fields that might be in the Octagon API response\n  model?: string;\n  created?: number;\n  id?: string;\n  [key: string]: any; // Allow for additional unknown properties\n}\n\n// ==================== AUTHENTICATION & MANAGEMENT TYPES ====================\n\n// API Authentication types\nexport interface AuthCredentials {\n  apiKey: string;\n}\n\n// API Key interface\nexport interface APIKey {\n  id?: string | null;\n  created_at: string;\n  updated_at?: string | null;\n  name: string;\n  truncated_secret: string;\n}\n\n// ==================== UTILITY TYPES ====================\n\n// Type aliases for common data structures\nexport type Option<T = string> = { value: T; label: string };\nexport type Maybe<T> = T | null | undefined;\n\n// ==================== EXCEL INTEGRATION TYPES ====================\n\n// Excel table formatting options\nexport interface ExcelTableOptions {\n  hasHeaders?: boolean;\n  showTotals?: boolean;\n  tableName?: string;\n  tableStyle?: string;\n}\n\n// Excel insertion result\nexport interface ExcelInsertionResult {\n  success: boolean;\n  rowsInserted: number;\n  columnsInserted: number;\n  range?: string;\n  error?: string;\n}\n\n// ==================== ERROR HANDLING TYPES ====================\n\n// Standardized error response\nexport interface ErrorResponse {\n  error: {\n    code: string;\n    message: string;\n    type: 'api_error' | 'rate_limit_exceeded' | 'invalid_request' | 'authentication_error';\n    param?: string;\n  };\n}\n\n// ==================== EXPORTED CONSTANTS ====================\n\n// Default responses endpoint completion options\nexport const DEFAULT_CHAT_OPTIONS = {\n  temperature: 0.7,\n  max_tokens: 1500,\n  stream: true\n} as const;","/**\r\n * Octagon API Agents Definitions\r\n * These interfaces define the available agents in the Octagon API\r\n */\r\n\r\nimport { AgentInfo, AgentCategory } from './types';\r\n\r\nexport const OCTAGON_AGENTS: AgentInfo[] = [  \r\n  // Deep Research Agents\r\n  {\r\n    id: 'octagon-deep-research-agent',\r\n    displayName: 'Deep Research Agent',\r\n    excelFormulaName: 'OCTAGON.DEEP_RESEARCH_AGENT',\r\n    description: 'A comprehensive agent that can utilize multiple sources for deep research analysis.',\r\n    category: AgentCategory.DeepResearch,\r\n    examplePrompt: '=OCTAGON.DEEP_RESEARCH_AGENT(\"Research the financial impact of Apple privacy changes on digital advertising companies revenue and margins\")'\r\n  },\r\n  {\r\n    id: 'octagon-scraper-agent',\r\n    displayName: 'Scraper Agent',\r\n    excelFormulaName: 'OCTAGON.SCRAPER_AGENT',\r\n    description: 'Specialized agent for financial data extraction from investor websites.',\r\n    category: AgentCategory.DeepResearch,\r\n    examplePrompt: '=OCTAGON.SCRAPER_AGENT(\"Extract all data fields from zillow.com/san-francisco-ca/ max_pages:2, country:us\")'\r\n  },\r\n  // Market Intelligence Agents\r\n  {\r\n    id: 'octagon-agent',\r\n    displayName: 'Octagon Agent',\r\n    excelFormulaName: 'OCTAGON.OCTAGON_AGENT',\r\n    description: 'Public and Private market intelligence agent that optimally routes requests to appropriate specialized agents',\r\n    category: AgentCategory.MarketIntelligence,\r\n    usageExamples: [\r\n      { \r\n        topic: 'Financial Metrics Analysis',\r\n        prompt: '=OCTAGON.OCTAGON_AGENT(\"Retrieve year-over-year growth in key income-statement items for AAPL, limited to 5 records and filtered by period FY.\")'\r\n      },\r\n      { \r\n        topic: 'SEC Filing Analysis',\r\n        prompt: '=OCTAGON.OCTAGON_AGENT(\"Analyze the latest 10-K filing for AAPL and extract key financial metrics and risk factors.\")'\r\n      },\r\n      { \r\n        topic: 'Stock Performance',\r\n        prompt: '=OCTAGON.OCTAGON_AGENT(\"Retrieve the daily closing prices for AAPL over the last 30 days.\")'\r\n      },\r\n      { \r\n        topic: 'Earnings Call Insights',\r\n        prompt: '=OCTAGON.OCTAGON_AGENT(\"Analyze AAPL\\'s latest earnings call transcript and extract key insights about future guidance.\")'\r\n      },\r\n      { \r\n        topic: 'Company Overview',\r\n        prompt: '=OCTAGON.OCTAGON_AGENT(\"Provide a comprehensive overview of Stripe, including its business model and key metrics.\")'\r\n      },\r\n      { \r\n        topic: 'Funding History',\r\n        prompt: '=OCTAGON.OCTAGON_AGENT(\"Retrieve the funding history for Stripe, including all rounds and investors.\")'\r\n      },\r\n      { \r\n        topic: 'M&A Activity',\r\n        prompt: '=OCTAGON.OCTAGON_AGENT(\"List all M&A transactions involving Stripe in the last 2 years.\")'\r\n      },\r\n      { \r\n        topic: 'Investor Profile',\r\n        prompt: '=OCTAGON.OCTAGON_AGENT(\"Provide a detailed profile of Sequoia Capital\\'s investment strategy and portfolio.\")'\r\n      },\r\n      { \r\n        topic: 'Debt Analysis',\r\n        prompt: '=OCTAGON.OCTAGON_AGENT(\"Analyze Stripe\\'s debt financing history and current debt structure.\")'\r\n      },\r\n      { \r\n        topic: 'Institutional Holdings',\r\n        prompt: '=OCTAGON.OCTAGON_AGENT(\"Retrieve the most recent Form 13F and related filings submitted by institutional investors.\")'\r\n      }\r\n    ]\r\n  },\r\n];\r\n","/**\r\n * Browser and API support detection utilities\r\n * Used to provide compatibility warnings to users\r\n */\r\n\r\nimport Logger from './logger';\r\n\r\n/**\r\n * Detects if the browser is Internet Explorer\r\n * @returns true if the browser is IE, false otherwise\r\n */\r\nexport function detectIE(): boolean {\r\n  try {\r\n    const ua = window.navigator.userAgent;\r\n    const msie = ua.indexOf('MSIE ');\r\n    const trident = ua.indexOf('Trident/');\r\n    \r\n    return (msie > 0 || trident > 0);\r\n  } catch (error) {\r\n    Logger.error('Error detecting browser:', error);\r\n    return false; // Assume not IE if detection fails\r\n  }\r\n}\r\n\r\n/**\r\n * Checks if all required APIs are supported in the current environment\r\n * @returns An array of issues (empty if all requirements are met)\r\n */\r\nexport function checkRequiredApiSupport(): string[] {\r\n  const issues: string[] = [];\r\n  \r\n  try {\r\n    // Check for SharedRuntime support\r\n    if (!Office.context.requirements.isSetSupported('SharedRuntime', '1.1')) {\r\n      issues.push(\"This add-in requires SharedRuntime support. Please update to a newer version of Office.\");\r\n    }\r\n    \r\n    // Check for ExcelApi support\r\n    if (!Office.context.requirements.isSetSupported('ExcelApi', '1.7')) {\r\n      issues.push(\"Some Excel features require Excel API 1.7 or later. Please update to a newer version of Excel.\");\r\n    }\r\n    \r\n    // Check for CustomFunctions support\r\n    if (!Office.context.requirements.isSetSupported('CustomFunctions', '1.1')) {\r\n      issues.push(\"Custom functions require Excel support for CustomFunctions 1.1 or later.\");\r\n    }\r\n    \r\n    // Check if we're in a compatible platform for our add-in\r\n    checkPlatformCompatibility(issues);\r\n    \r\n  } catch (error) {\r\n    Logger.error('Error checking API support:', error);\r\n    issues.push(\"Error checking API compatibility. Some features may not work as expected.\");\r\n  }\r\n  \r\n  return issues;\r\n}\r\n\r\n/**\r\n * Checks platform compatibility and adds any issues to the issues array\r\n * @param issues Array to add platform compatibility issues to\r\n */\r\nfunction checkPlatformCompatibility(issues: string[]): void {\r\n  // Check if we're in a web browser\r\n  try {\r\n    const platform = Office.context.platform;\r\n    const host = Office.context.host;\r\n    \r\n    // Log platform information for diagnostics\r\n    Logger.info(`Running on platform: ${platform}, host: ${host}`);\r\n    \r\n    // Check specific platform requirements\r\n    if (platform === Office.PlatformType.PC) {\r\n      // Check for Windows version compatibility if needed\r\n      // This would require additional detection code\r\n    } else if (platform === Office.PlatformType.Mac) {\r\n      // Check for Mac-specific issues if needed\r\n    } else if (platform === Office.PlatformType.OfficeOnline) {\r\n      // Check for Office Online specific issues\r\n      \r\n      // Example: Warn about possible streaming limitations in Excel Online\r\n      issues.push(\"Excel Online may have limitations with long-running functions. Consider using Excel desktop for complex operations.\");\r\n    }\r\n    \r\n    // Ensure we're running in Excel\r\n    if (host !== Office.HostType.Excel) {\r\n      issues.push(\"This add-in is designed for Excel and may not function correctly in other Office applications.\");\r\n    }\r\n    \r\n  } catch (error) {\r\n    Logger.error('Error detecting platform:', error);\r\n    // Don't add to issues here as we already have a general error message\r\n  }\r\n}","/**\r\n * Octagon Excel Add-in Taskpane\r\n * This file handles the UI and interaction for the Octagon Excel Add-in taskpane\r\n */\r\n\r\nimport { octagonApiService } from '../api/octagonApi';\r\nimport { OCTAGON_AGENTS } from '../api/agents';\r\nimport Logger from '../utils/logger';\r\nimport { detectIE, checkRequiredApiSupport } from '../utils/browserSupport';\r\n\r\n// Initialize API service\r\nconst apiService = octagonApiService;\r\n\r\n// Track the application state\r\nlet isAuthenticated = false;\r\nlet isCheckingApiKey = false;\r\nlet hasAutoRedirected = false;\r\n\r\n// Initialize the taskpane when Office is ready\r\nOffice.onReady(async (info) => {\r\n  try {\r\n    Logger.info(\"Office is ready - initializing Octagon taskpane\");\r\n    \r\n    // Initialize the API service\r\n    apiService.initialize();\r\n    \r\n    // Hide the sideload message\r\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\r\n    \r\n    // Add event listeners to UI elements\r\n    setupEventListeners();\r\n    \r\n    // Show auth view first (this ensures UI is visible)\r\n    showAuthView();\r\n        \r\n    // Check browser compatibility\r\n    if (detectIE()) {\r\n      showBrowserWarning('Internet Explorer is not fully supported. For the best experience, please use Microsoft Edge, Chrome, or another modern browser.');\r\n    }\r\n    \r\n    // Check if all required APIs are supported\r\n    const apiSupportIssues = checkRequiredApiSupport();\r\n    if (apiSupportIssues.length > 0) {\r\n      showApiSupportWarning(apiSupportIssues);\r\n    }\r\n    \r\n    Logger.info(\"Taskpane initialized\");\r\n  } catch (error) {\r\n    Logger.error(\"Error during taskpane initialization:\", error);\r\n  }\r\n});\r\n\r\n/**\r\n * Set up event listeners for UI interactions\r\n */\r\nfunction setupEventListeners() {\r\n  // Test Connection button\r\n  const testConnectionButton = document.getElementById(\"test-connection-button\");\r\n  if (testConnectionButton) {\r\n    testConnectionButton.addEventListener(\"click\", handleTestConnection);\r\n  }\r\n  \r\n  // Clear API Keys button\r\n  const clearApiKeysButton = document.getElementById(\"clear-api-keys-button\");\r\n  if (clearApiKeysButton) {\r\n    clearApiKeysButton.addEventListener(\"click\", handleClearApiKeys);\r\n  }\r\n  \r\n  // Continue to Main Menu button\r\n  const continueToMenuButton = document.getElementById(\"continue-to-menu-button\");\r\n  if (continueToMenuButton) {\r\n    continueToMenuButton.addEventListener(\"click\", showAgentsView);\r\n  }\r\n  \r\n  // Note: We no longer need to set up the back button listener here\r\n  // since we add it dynamically when creating the agents view\r\n  \r\n  // Enter key in API key input\r\n  const apiKeyInput = document.getElementById(\"api-key-input\") as HTMLInputElement;\r\n  if (apiKeyInput) {\r\n    apiKeyInput.addEventListener(\"keypress\", (event) => {\r\n      if (event.key === \"Enter\") {\r\n        handleTestConnection();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Show the authentication view\r\n */\r\nfunction showAuthView() {\r\n  const authView = document.getElementById(\"auth-view\");\r\n  const agentsView = document.getElementById(\"agents-view\");\r\n  \r\n  if (authView && agentsView) {\r\n    authView.style.display = \"block\";\r\n    authView.classList.add(\"fade-in\");\r\n    agentsView.style.display = \"none\";\r\n  }\r\n  \r\n  // Only check API key status if this function wasn't called during initialization\r\n  // or as part of another API key status check\r\n  if (!isCheckingApiKey) {\r\n    isCheckingApiKey = true;\r\n    \r\n    // Uses setTimeout to break the potential call stack chain\r\n    // This ensures UI renders before we continue with more logic\r\n    setTimeout(() => {\r\n      checkApiKeyStatus();\r\n      isCheckingApiKey = false;\r\n    }, 0);\r\n  }\r\n}\r\n\r\n/**\r\n * Check the status of the API key and update the UI accordingly\r\n */\r\nfunction checkApiKeyStatus() {\r\n  const hasStoredKey = apiService.checkForStoredApiKey();\r\n  const statusMessageContainer = document.getElementById(\"api-key-status-message\");\r\n  const continueToMenuContainer = document.getElementById(\"continue-to-menu-container\");\r\n  const apiKeyInputContainer = document.getElementById(\"api-key-input-container\");\r\n  \r\n  // Get the authentication header and instruction text\r\n  const authHeader = document.querySelector(\".auth-container h3.ms-font-l\");\r\n  const authInstructions = document.querySelector(\".auth-container p.ms-font-m\");\r\n  \r\n  if (hasStoredKey) {\r\n    // If we have a stored key, hide the status message but log it\r\n    Logger.info(\"API Key detected from previous sessions\");\r\n    \r\n    if (statusMessageContainer) {\r\n      statusMessageContainer.style.display = \"none\";\r\n    }\r\n    \r\n    // Hide the authentication header and instructions\r\n    if (authHeader) {\r\n      authHeader.textContent = \"API Key Detected\";\r\n    }\r\n    \r\n    if (authInstructions) {\r\n      authInstructions.textContent = \"Your API key has been detected. You can proceed to the main menu or verify your connection.\";\r\n    }\r\n    \r\n    // Show the continue button and style it at the bottom center\r\n    if (continueToMenuContainer) {\r\n      continueToMenuContainer.style.display = \"flex\";\r\n      continueToMenuContainer.innerHTML = \"\";\r\n      \r\n      const continueButton = document.createElement(\"button\");\r\n      continueButton.id = \"continue-to-menu-button\";\r\n      continueButton.className = \"ms-Button ms-Button--icon continue-to-menu-button\";\r\n      continueButton.innerHTML = `\r\n        <span class=\"ms-Button-label\">Main Menu</span>\r\n        <span class=\"ms-Button-icon\">\r\n          <i class=\"ms-Icon ms-Icon--ChevronRight\"></i>\r\n        </span>\r\n      `;\r\n      continueButton.addEventListener(\"click\", showAgentsView);\r\n      \r\n      continueToMenuContainer.appendChild(continueButton);\r\n    }\r\n    \r\n    // Hide the API key input container\r\n    if (apiKeyInputContainer) {\r\n      apiKeyInputContainer.style.display = \"none\";\r\n    }\r\n    \r\n    // Rename the action buttons\r\n    updateActionButtonLabels(true);\r\n    \r\n    // Set authenticated state\r\n    isAuthenticated = true;\r\n    \r\n    // Only auto-redirect if this is the first time we're checking the API key\r\n    // and we haven't auto-redirected before\r\n    if (!hasAutoRedirected) {\r\n      hasAutoRedirected = true;\r\n      // Automatically proceed to the Main Menu after a brief delay\r\n      setTimeout(() => {\r\n        showAgentsView();\r\n      }, 1000);\r\n    }\r\n  } else {\r\n    // If no key is stored, show a message\r\n    if (statusMessageContainer) {\r\n      statusMessageContainer.textContent = \"No API Key detected. Please provide an API Key to continue.\";\r\n      statusMessageContainer.style.display = \"block\";\r\n    }\r\n    \r\n    // Show the default authentication header and instructions\r\n    if (authHeader) {\r\n      authHeader.textContent = \"Authentication Required\";\r\n    }\r\n    \r\n    if (authInstructions) {\r\n      authInstructions.textContent = \"Please enter your Octagon API key to continue:\";\r\n    }\r\n    \r\n    if (continueToMenuContainer) {\r\n      continueToMenuContainer.style.display = \"none\";\r\n    }\r\n    \r\n    // Show the API key input container\r\n    if (apiKeyInputContainer) {\r\n      apiKeyInputContainer.style.display = \"block\";\r\n    }\r\n    \r\n    // Update button labels for new users\r\n    updateActionButtonLabels(false);\r\n  }\r\n}\r\n\r\n/**\r\n * Update action button labels based on authentication state\r\n * @param isAuthenticated Whether the user is authenticated\r\n */\r\nfunction updateActionButtonLabels(isAuthenticated: boolean) {\r\n  const testConnectionButton = document.getElementById(\"test-connection-button\");\r\n  const clearApiKeysButton = document.getElementById(\"clear-api-keys-button\");\r\n  \r\n  if (testConnectionButton) {\r\n    if (isAuthenticated) {\r\n      testConnectionButton.innerHTML = '<span class=\"ms-Button-label\">Check</span>';\r\n    } else {\r\n      testConnectionButton.innerHTML = '<span class=\"ms-Button-label\">Test Connection</span>';\r\n    }\r\n  }\r\n  \r\n  if (clearApiKeysButton) {\r\n    if (isAuthenticated) {\r\n      clearApiKeysButton.innerHTML = '<span class=\"ms-Button-label\">Clear</span>';\r\n    } else {\r\n      clearApiKeysButton.innerHTML = '<span class=\"ms-Button-label\">Clear API Keys</span>';\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Handle the Test Connection button click\r\n */\r\nasync function handleTestConnection() {\r\n  try {\r\n    // Get the API key from the input field (if visible)\r\n    const apiKeyInput = document.getElementById(\"api-key-input\") as HTMLInputElement;\r\n    let apiKey = apiKeyInput?.value?.trim();\r\n    \r\n    // If input is not visible or empty, we need to use the stored key\r\n    if (!apiKeyInput || apiKeyInput.style.display === \"none\" || !apiKey) {\r\n      // Check if a stored API Key exists\r\n      const hasStoredKey = apiService.checkForStoredApiKey();\r\n      \r\n      // If we have a stored key but don't have access to it directly,\r\n      // we can just proceed with testing the connection using whatever\r\n      // the API service already has\r\n      if (!hasStoredKey) {\r\n        showAuthError(\"No API Key available. Please enter an API Key.\");\r\n        return;\r\n      }\r\n      \r\n      // We'll just test with the key that's already set in the service\r\n    } else {\r\n      // We have a new key from the input, set it before testing\r\n      apiService.setApiKey(apiKey);\r\n    }\r\n    \r\n    // Show loading state\r\n    toggleAuthLoadingState(true);\r\n    \r\n    // Test the connection\r\n    const isValid = await testApiConnection();\r\n    \r\n    // Hide loading state\r\n    toggleAuthLoadingState(false);\r\n    \r\n    if (isValid) {\r\n      // Success - show success message and enable continue button\r\n      clearAuthError();\r\n      showAuthSuccess(\"Connection successful! API Key verified.\");\r\n      \r\n      // Get the authentication header and instruction text\r\n      const authHeader = document.querySelector(\".auth-container h3.ms-font-l\");\r\n      const authInstructions = document.querySelector(\".auth-container p.ms-font-m\");\r\n      \r\n      // Update text for authenticated users\r\n      if (authHeader) {\r\n        authHeader.textContent = \"API Key Detected\";\r\n      }\r\n      \r\n      if (authInstructions) {\r\n        authInstructions.textContent = \"Your API key has been detected. You can proceed to the main menu or verify your connection.\";\r\n      }\r\n      \r\n      // Update the UI to authenticated state\r\n      const apiKeyInputContainer = document.getElementById(\"api-key-input-container\");\r\n      if (apiKeyInputContainer) {\r\n        apiKeyInputContainer.style.display = \"none\";\r\n      }\r\n      \r\n      // Show the continue button\r\n      const continueToMenuContainer = document.getElementById(\"continue-to-menu-container\");\r\n      if (continueToMenuContainer) {\r\n        continueToMenuContainer.style.display = \"flex\";\r\n        continueToMenuContainer.innerHTML = \"\";\r\n        \r\n        const continueButton = document.createElement(\"button\");\r\n        continueButton.id = \"continue-to-menu-button\";\r\n        continueButton.className = \"ms-Button ms-Button--icon continue-to-menu-button\";\r\n        continueButton.innerHTML = `\r\n          <span class=\"ms-Button-label\">Main Menu</span>\r\n          <span class=\"ms-Button-icon\">\r\n            <i class=\"ms-Icon ms-Icon--ChevronRight\"></i>\r\n          </span>\r\n        `;\r\n        continueButton.addEventListener(\"click\", showAgentsView);\r\n        \r\n        continueToMenuContainer.appendChild(continueButton);\r\n      }\r\n      \r\n      // Hide status message\r\n      const statusMessageContainer = document.getElementById(\"api-key-status-message\");\r\n      if (statusMessageContainer) {\r\n        statusMessageContainer.style.display = \"none\";\r\n      }\r\n      \r\n      updateActionButtonLabels(true);\r\n      isAuthenticated = true;\r\n      \r\n      // Automatically proceed to the Main Menu after a brief delay\r\n      // This gives the user a chance to see the success message first\r\n      setTimeout(() => {\r\n        showAgentsView();\r\n      }, 1000);\r\n\r\n    } else {\r\n      \r\n      // Failed - show error message\r\n      showAuthError(\"Invalid API key. Please check and try again.\");\r\n      apiService.clearApiKey();\r\n      \r\n      // Reset UI text\r\n      const authHeader = document.querySelector(\".auth-container h3.ms-font-l\");\r\n      const authInstructions = document.querySelector(\".auth-container p.ms-font-m\");\r\n      \r\n      if (authHeader) {\r\n        authHeader.textContent = \"Authentication Required\";\r\n      }\r\n      \r\n      if (authInstructions) {\r\n        authInstructions.textContent = \"Please enter your Octagon API key to continue:\";\r\n      }\r\n      \r\n      // Show the API key input\r\n      const apiKeyInputContainer = document.getElementById(\"api-key-input-container\");\r\n      if (apiKeyInputContainer) {\r\n        apiKeyInputContainer.style.display = \"block\";\r\n      }\r\n      \r\n      updateActionButtonLabels(false);\r\n      isAuthenticated = false;\r\n    }\r\n  } catch (error) {\r\n    // Hide loading state\r\n    toggleAuthLoadingState(false);\r\n    \r\n    // Show error message\r\n    showAuthError(\"An error occurred. Please try again.\");\r\n    Logger.error(\"Authentication error:\", error);\r\n  }\r\n}\r\n\r\n/**\r\n * Handle the Clear API Keys button click\r\n */\r\nfunction handleClearApiKeys() {\r\n  apiService.clearApiKey();\r\n  isAuthenticated = false;\r\n  hasAutoRedirected = false; // Reset the auto-redirect flag\r\n  \r\n  // Reset the API key input\r\n  const apiKeyInput = document.getElementById(\"api-key-input\") as HTMLInputElement;\r\n  if (apiKeyInput) {\r\n    apiKeyInput.value = \"\";\r\n  }\r\n  \r\n  // Update the authentication header and instruction text\r\n  const authHeader = document.querySelector(\".auth-container h3.ms-font-l\");\r\n  const authInstructions = document.querySelector(\".auth-container p.ms-font-m\");\r\n  \r\n  if (authHeader) {\r\n    authHeader.textContent = \"Authentication Required\";\r\n  }\r\n  \r\n  if (authInstructions) {\r\n    authInstructions.textContent = \"Please enter your Octagon API key to continue:\";\r\n  }\r\n  \r\n  // Show the API key input container\r\n  const apiKeyInputContainer = document.getElementById(\"api-key-input-container\");\r\n  if (apiKeyInputContainer) {\r\n    apiKeyInputContainer.style.display = \"block\";\r\n  }\r\n  \r\n  // Hide the continue button\r\n  const continueToMenuContainer = document.getElementById(\"continue-to-menu-container\");\r\n  if (continueToMenuContainer) {\r\n    continueToMenuContainer.style.display = \"none\";\r\n  }\r\n  \r\n  // Update status message\r\n  const statusMessageContainer = document.getElementById(\"api-key-status-message\");\r\n  if (statusMessageContainer) {\r\n    statusMessageContainer.textContent = \"All stored API Keys have been cleared. Please provide a new API Key to continue.\";\r\n    statusMessageContainer.style.display = \"block\";\r\n  }\r\n  \r\n  // Update button labels\r\n  updateActionButtonLabels(false);\r\n  \r\n  Logger.info(\"All API Keys cleared\");\r\n}\r\n\r\n/**\r\n * Test the API connection\r\n * @returns Promise<boolean> True if connection is valid, false otherwise\r\n */\r\nasync function testApiConnection(): Promise<boolean> {\r\n  try {\r\n    Logger.info(\"Testing API connection\");\r\n    const response = await apiService.testConnection();\r\n    \r\n    Logger.info(`API test response: ${JSON.stringify(response)}`);\r\n    \r\n    return response.success;\r\n  } catch (error) {\r\n    Logger.error(\"API test connection error:\", error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Show authentication error message\r\n * @param message Error message to display\r\n */\r\nfunction showAuthError(message: string) {\r\n  const errorElement = document.getElementById(\"auth-error\");\r\n  if (errorElement) {\r\n    errorElement.textContent = message;\r\n    errorElement.style.display = \"block\";\r\n  }\r\n}\r\n\r\n/**\r\n * Show authentication success message (temporarily)\r\n * @param message Success message to display\r\n */\r\nfunction showAuthSuccess(message: string) {\r\n  const errorElement = document.getElementById(\"auth-error\");\r\n  if (errorElement) {\r\n    errorElement.textContent = message;\r\n    errorElement.style.color = \"green\";\r\n    errorElement.style.display = \"block\";\r\n    \r\n    // Hide the message after 3 seconds\r\n    setTimeout(() => {\r\n      clearAuthError();\r\n    }, 3000);\r\n  }\r\n}\r\n\r\n/**\r\n * Clear authentication error message\r\n */\r\nfunction clearAuthError() {\r\n  const errorElement = document.getElementById(\"auth-error\");\r\n  if (errorElement) {\r\n    errorElement.textContent = \"\";\r\n    errorElement.style.display = \"none\";\r\n    errorElement.style.color = \"#a80000\"; // Reset to error color\r\n  }\r\n}\r\n\r\n/**\r\n * Toggle the loading state during authentication\r\n * @param isLoading Whether to show or hide the loading state\r\n */\r\nfunction toggleAuthLoadingState(isLoading: boolean) {\r\n  const button = document.getElementById(\"test-connection-button\");\r\n  const spinner = document.getElementById(\"auth-spinner\");\r\n  \r\n  if (button && spinner) {\r\n    if (isLoading) {\r\n      button.setAttribute(\"disabled\", \"true\");\r\n      spinner.style.display = \"block\";\r\n    } else {\r\n      button.removeAttribute(\"disabled\");\r\n      spinner.style.display = \"none\";\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Show the agents view and populate it with agent data\r\n */\r\nfunction showAgentsView() {\r\n  const authView = document.getElementById(\"auth-view\");\r\n  const agentsView = document.getElementById(\"agents-view\");\r\n  \r\n  if (authView && agentsView) {\r\n    authView.style.display = \"none\";\r\n    agentsView.style.display = \"block\";\r\n    agentsView.classList.add(\"fade-in\");\r\n    \r\n    // Hide the old back-to-auth button in the header (if it exists)\r\n    const oldBackButton = document.getElementById(\"back-to-auth-button-header\");\r\n    if (oldBackButton) {\r\n      oldBackButton.style.display = \"none\";\r\n    }\r\n    \r\n    // Populate the agents list\r\n    populateAgentsList();\r\n  }\r\n}\r\n\r\n/**\r\n * Populate the agents list with categories and agent cards\r\n */\r\nfunction populateAgentsList() {\r\n  const container = document.getElementById(\"agent-categories-container\");\r\n  \r\n  if (!container) return;\r\n  \r\n  // Clear the container\r\n  container.innerHTML = \"\";\r\n  \r\n  // Group agents by category\r\n  const agentsByCategory = groupAgentsByCategory();\r\n  \r\n  // Create a section for each category\r\n  for (const [category, agents] of Object.entries(agentsByCategory)) {\r\n    // Create category container\r\n    const categoryElement = document.createElement(\"div\");\r\n    categoryElement.className = \"agent-category\";\r\n    \r\n    // Create category title\r\n    const titleElement = document.createElement(\"h3\");\r\n    titleElement.className = \"category-title\";\r\n    titleElement.textContent = category;\r\n    categoryElement.appendChild(titleElement);\r\n    \r\n    // Create agent cards for this category\r\n    agents.forEach(agent => {\r\n      const agentCard = createAgentCard(agent);\r\n      categoryElement.appendChild(agentCard);\r\n    });\r\n    \r\n    // Add the category to the container\r\n    container.appendChild(categoryElement);\r\n  }\r\n  \r\n  // Add a small back button at the bottom of the container\r\n  const backButtonContainer = document.createElement(\"div\");\r\n  backButtonContainer.className = \"back-button-container\";\r\n  \r\n  const backButton = document.createElement(\"button\");\r\n  backButton.id = \"back-to-auth-button\";\r\n  backButton.className = \"ms-Button ms-Button--icon back-to-login-button\";\r\n  backButton.innerHTML = `\r\n    <span class=\"ms-Button-icon\">\r\n      <i class=\"ms-Icon ms-Icon--ChevronLeft\"></i>\r\n    </span>\r\n    <span class=\"ms-Button-label\">Back to Log In</span>\r\n  `;\r\n  backButton.addEventListener(\"click\", showAuthView);\r\n  \r\n  backButtonContainer.appendChild(backButton);\r\n  container.appendChild(backButtonContainer);\r\n}\r\n\r\n/**\r\n * Group agents by their category\r\n * @returns Record<string, typeof OCTAGON_AGENTS[0][]>\r\n */\r\nfunction groupAgentsByCategory() {\r\n  const categories: Record<string, typeof OCTAGON_AGENTS[0][]> = {};\r\n  \r\n  OCTAGON_AGENTS.forEach(agent => {\r\n    if (!categories[agent.category]) {\r\n      categories[agent.category] = [];\r\n    }\r\n    categories[agent.category].push(agent);\r\n  });\r\n  \r\n  return categories;\r\n}\r\n\r\n/**\r\n * Create an agent card element\r\n * @param agent Agent information\r\n * @returns HTMLElement The agent card\r\n */\r\nfunction createAgentCard(agent: typeof OCTAGON_AGENTS[0]): HTMLElement {\r\n  const card = document.createElement(\"div\");\r\n  card.className = \"agent-card\";\r\n  \r\n  // Agent title\r\n  const title = document.createElement(\"h4\");\r\n  title.className = \"agent-title\";\r\n  title.textContent = agent.displayName;\r\n  card.appendChild(title);\r\n  \r\n  // Agent description\r\n  const description = document.createElement(\"p\");\r\n  description.className = \"agent-description\";\r\n  description.textContent = agent.description;\r\n  card.appendChild(description);\r\n  \r\n  // Agent metadata\r\n  const meta = document.createElement(\"div\");\r\n  meta.className = \"agent-meta\";\r\n  \r\n  // Formula name\r\n  const formula = document.createElement(\"div\");\r\n  formula.innerHTML = `<strong>Excel Formula:</strong> <span class=\"formula-name\">${agent.excelFormulaName}(\"your prompt\")</span>`;\r\n  meta.appendChild(formula);\r\n  \r\n  // Example prompt\r\n  if (agent.examplePrompt) {\r\n    const example = document.createElement(\"div\");\r\n    example.style.position = \"relative\";\r\n    example.innerHTML = `<strong>Example:</strong> <span class=\"example-prompt\">${agent.examplePrompt}</span>`;\r\n    \r\n    // Add copy button for the example prompt\r\n    const copyButton = document.createElement(\"button\");\r\n    copyButton.className = \"copy-button\";\r\n    copyButton.title = \"Copy example\";\r\n    copyButton.style.top = \"0\";\r\n    copyButton.style.right = \"0\";\r\n    copyButton.innerHTML = '<i class=\"ms-Icon ms-Icon--Copy\"></i>';\r\n    copyButton.onclick = (e) => {\r\n      e.stopPropagation();\r\n      navigator.clipboard.writeText(agent.examplePrompt)\r\n        .then(() => {\r\n          // Show success feedback\r\n          copyButton.innerHTML = '<i class=\"ms-Icon ms-Icon--CheckMark copy-success\"></i>';\r\n          setTimeout(() => {\r\n            copyButton.innerHTML = '<i class=\"ms-Icon ms-Icon--Copy\"></i>';\r\n          }, 1500);\r\n        })\r\n        .catch(err => {\r\n          console.error('Could not copy text: ', err);\r\n        });\r\n    };\r\n    \r\n    example.appendChild(copyButton);\r\n    meta.appendChild(example);\r\n  }\r\n  \r\n  card.appendChild(meta);\r\n  \r\n  // Usage examples section (if available)\r\n  if (agent.usageExamples && agent.usageExamples.length > 0) {\r\n    const usageSection = document.createElement(\"div\");\r\n    usageSection.className = \"usage-examples-section\";\r\n    \r\n    // Usage examples heading\r\n    const usageHeading = document.createElement(\"h5\");\r\n    usageHeading.className = \"usage-heading\";\r\n    usageHeading.textContent = \"Usage Examples:\";\r\n    usageSection.appendChild(usageHeading);\r\n    \r\n    // Create a list for the examples\r\n    const examplesList = document.createElement(\"div\");\r\n    examplesList.className = \"examples-list\";\r\n    \r\n    // Add each example to the list\r\n    agent.usageExamples.forEach(example => {\r\n      const exampleItem = document.createElement(\"div\");\r\n      exampleItem.className = \"example-item\";\r\n      \r\n      const topicElement = document.createElement(\"div\");\r\n      topicElement.className = \"example-topic\";\r\n      topicElement.textContent = example.topic;\r\n      exampleItem.appendChild(topicElement);\r\n      \r\n      // Create a container for the prompt to allow positioning the copy button\r\n      const promptContainer = document.createElement(\"div\");\r\n      promptContainer.className = \"example-prompt-container\";\r\n      promptContainer.style.position = \"relative\";\r\n      \r\n      const promptElement = document.createElement(\"div\");\r\n      promptElement.className = \"example-prompt code\";\r\n      promptElement.textContent = example.prompt;\r\n      promptContainer.appendChild(promptElement);\r\n      \r\n      // Add copy button\r\n      const copyButton = document.createElement(\"button\");\r\n      copyButton.className = \"copy-button\";\r\n      copyButton.title = \"Copy example\";\r\n      copyButton.innerHTML = '<i class=\"ms-Icon ms-Icon--Copy\"></i>';\r\n      copyButton.onclick = (e) => {\r\n        e.stopPropagation();\r\n        navigator.clipboard.writeText(example.prompt)\r\n          .then(() => {\r\n            // Show success feedback\r\n            copyButton.innerHTML = '<i class=\"ms-Icon ms-Icon--CheckMark copy-success\"></i>';\r\n            setTimeout(() => {\r\n              copyButton.innerHTML = '<i class=\"ms-Icon ms-Icon--Copy\"></i>';\r\n            }, 1500);\r\n          })\r\n          .catch(err => {\r\n            console.error('Could not copy text: ', err);\r\n          });\r\n      };\r\n      \r\n      promptContainer.appendChild(copyButton);\r\n      exampleItem.appendChild(promptContainer);\r\n      \r\n      examplesList.appendChild(exampleItem);\r\n    });\r\n    \r\n    usageSection.appendChild(examplesList);\r\n    card.appendChild(usageSection);\r\n  }\r\n  \r\n  return card;\r\n}\r\n\r\n/**\r\n * Shows a browser compatibility warning to the user\r\n */\r\nfunction showBrowserWarning(message: string) {\r\n  const warningDiv = document.createElement('div');\r\n  warningDiv.className = 'browser-warning';\r\n  warningDiv.innerHTML = `\r\n    <div class=\"warning-icon\"><i class=\"ms-Icon ms-Icon--Warning\"></i></div>\r\n    <div class=\"warning-message\">${message}</div>\r\n  `;\r\n  \r\n  // Insert at the top of the body or in a specific container\r\n  const container = document.querySelector('.content-container') || document.body;\r\n  container.insertBefore(warningDiv, container.firstChild);\r\n}\r\n\r\n/**\r\n * Shows API support warnings to the user\r\n */\r\nfunction showApiSupportWarning(issues: string[]) {\r\n  const warningDiv = document.createElement('div');\r\n  warningDiv.className = 'api-support-warning';\r\n  \r\n  let warningHtml = `\r\n    <div class=\"warning-icon\"><i class=\"ms-Icon ms-Icon--Warning\"></i></div>\r\n    <div class=\"warning-message\">\r\n      <p>Some features may not work correctly in your current environment:</p>\r\n      <ul>\r\n  `;\r\n  \r\n  issues.forEach(issue => {\r\n    warningHtml += `<li>${issue}</li>`;\r\n  });\r\n  \r\n  warningHtml += `\r\n      </ul>\r\n    </div>\r\n  `;\r\n  \r\n  warningDiv.innerHTML = warningHtml;\r\n  \r\n  // Insert after the browser warning or at the top\r\n  const container = document.querySelector('.content-container') || document.body;\r\n  const existingWarning = document.querySelector('.browser-warning');\r\n  \r\n  if (existingWarning) {\r\n    container.insertBefore(warningDiv, existingWarning.nextSibling);\r\n  } else {\r\n    container.insertBefore(warningDiv, container.firstChild);\r\n  }\r\n}","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../../assets/icon-80.png\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Octagon AI - Market Intelligence for Excel</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-Fabric\\\"> <header class=\\\"octagon-header ms-bgColor-neutralLighter\\\"> <img width=\\\"90\\\" height=\\\"90\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\" alt=\\\"Octagon AI\\\" title=\\\"Octagon AI\\\"/> <h1 class=\\\"ms-font-su\\\">Octagon AI</h1> </header> <section id=\\\"sideload-msg\\\" class=\\\"ms-welcome__main\\\"> <h2 class=\\\"ms-font-xl\\\">Please <a target=\\\"_blank\\\" href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\">sideload</a> your add-in to see app body.</h2> </section> <main id=\\\"auth-view\\\" class=\\\"main-content\\\" style=\\\"display:none\\\"> <div class=\\\"content-container\\\"> <h2 class=\\\"ms-font-xl\\\">Welcome to Octagon AI</h2> <p class=\\\"ms-font-m description\\\"> Access real-time market intelligence and financial data directly in Excel with Octagon AI agents. </p> <div id=\\\"api-key-status-message\\\" class=\\\"status-message\\\"></div> <div class=\\\"auth-container\\\"> <h3 class=\\\"ms-font-l\\\">Authentication Required</h3> <p class=\\\"ms-font-m\\\">Please enter your Octagon API key to continue:</p> <div id=\\\"api-key-input-container\\\" class=\\\"form-group\\\"> <input type=\\\"password\\\" id=\\\"api-key-input\\\" class=\\\"ms-TextField-field\\\" placeholder=\\\"Enter your API key here\\\"/> <div id=\\\"auth-error\\\" class=\\\"error-message\\\" style=\\\"display:none\\\"></div> </div> <div class=\\\"button-container\\\"> <button id=\\\"test-connection-button\\\" class=\\\"ms-Button ms-Button--primary\\\"> <span class=\\\"ms-Button-label\\\">Test Connection</span> </button> <button id=\\\"clear-api-keys-button\\\" class=\\\"ms-Button ms-Button--default\\\"> <span class=\\\"ms-Button-label\\\">Clear stored API Keys</span> </button> <div id=\\\"auth-spinner\\\" class=\\\"ms-Spinner\\\" style=\\\"display:none\\\"></div> </div> <div id=\\\"continue-to-menu-container\\\" class=\\\"continue-button-container\\\" style=\\\"display:none;margin-top:16px\\\"> <button id=\\\"continue-to-menu-button\\\" class=\\\"ms-Button ms-Button--primary\\\"> <span class=\\\"ms-Button-label\\\">Continue to Main Menu</span> </button> </div> <p class=\\\"ms-font-s signup-link\\\"> Don't have an API key? <a href=\\\"https://www.octagonai.co/\\\" target=\\\"_blank\\\">Get one here</a> </p> </div> </div> <div class=\\\"footer\\\"> <div class=\\\"version\\\">Version 1.0.0</div> <div class=\\\"footer-links\\\"> <a href=\\\"https://www.octagonai.co/terms-of-service\\\" target=\\\"_blank\\\">Terms of Service</a> | <a href=\\\"https://www.octagonai.co/privacy\\\" target=\\\"_blank\\\">Privacy</a> | <a href=\\\"mailto:contact@octagonai.co\\\">Contact</a> | <a href=\\\"https://app.octagonagents.com/playground\\\" target=\\\"_blank\\\">API Playground</a> </div> </div> </main> <main id=\\\"agents-view\\\" class=\\\"main-content\\\" style=\\\"display:none\\\"> <div class=\\\"content-container\\\"> <div class=\\\"header-actions\\\"> <h2 class=\\\"ms-font-xl\\\">Available Agents</h2> </div> <p class=\\\"ms-font-m description\\\"> Use the following Octagon agents in your Excel formulas. </p> <div id=\\\"agent-categories-container\\\"></div> <div class=\\\"additional-resources\\\"> <h3>Resources</h3> <ul> <li> <i class=\\\"ms-Icon ms-Icon--ReadingMode\\\"></i> <a href=\\\"https://docs.octagonagents.com/\\\" target=\\\"_blank\\\">Official Documentation</a> </li> <li> <i class=\\\"ms-Icon ms-Icon--TestBeaker\\\"></i> <a href=\\\"https://app.octagonagents.com/playground\\\" target=\\\"_blank\\\">API Playground</a> </li> </ul> </div> </div> <div class=\\\"footer\\\"> <div class=\\\"version\\\">Version 1.0</div> <div class=\\\"footer-links\\\"> <a href=\\\"https://www.octagonai.co/terms-of-service\\\" target=\\\"_blank\\\">Terms of Service</a> | <a href=\\\"https://www.octagonai.co/privacy\\\" target=\\\"_blank\\\">Privacy</a> | <a href=\\\"mailto:contact@octagonai.co\\\">Contact</a> </div> </div> </main> </body> </html>\";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","LogLevel","currentLogLevel","ERROR","logLevelPriority","_defineProperty","DEBUG","INFO","WARN","log","level","message","data","timestamp","Date","toISOString","formattedMessage","concat","console","debug","info","warn","error","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","d","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","defineProperty","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","_typeof","toPrimitive","String","_toPrimitive","API_KEY_STORAGE_NAME","CACHED_SESSION_SETTINGS_KEY","OctagonApiService","apiUrl","_classCallCheck","Logger","isOfficeInitialized","loadApiKey","isAuthenticated","cachedSessionData","sessionStorage","getItem","sessionData","JSON","parse","octagon_api_key","apiKey","saveApiKey","setItem","stringify","newSessionData","_callAgent","_callee","agentId","prompt","requestData","response","_context","substring","model","input","stream","apiRequest","success","_x","_x2","parseError","directApiKey","trim","removeItem","_apiRequest","_callee2","endpoint","method","url","headers","requestBody","errorText","streamedResponse","_t","_args2","_context2","Headers","contentType","get","authorization","fetch","body","status","statusText","ok","text","handleStreamedResponse","_x3","_handleStreamedResponse","_callee3","_response$body","_finalResponse","_finalResponse2","_finalResponse3","_finalResponse4","reader","fullText","finalResponse","parseErrorCount","_yield$reader$read","chunk","lines","_iterator","_step","line","jsonStr","_data$part","transformedResponse","_t2","_t3","_t4","_t5","_context3","getReader","read","TextDecoder","decode","split","_createForOfIteratorHelper","s","startsWith","type","delta","part","output","content","id","created","created_at","now","rawResponse","contentLength","hasId","hasModel","outputItems","_x4","_testConnection","_callee4","result","_t6","_context4","max_tokens","hasContent","hasChoices","Array","isArray","choices","responseKeys","keys","_ResponseEndpoint","_callee5","query","_args5","_context5","_x5","_x6","octagonApiService","AgentCategory","OCTAGON_AGENTS","excelFormulaName","description","category","DeepResearch","examplePrompt","MarketIntelligence","usageExamples","topic","detectIE","ua","navigator","userAgent","msie","indexOf","trident","checkRequiredApiSupport","issues","Office","context","requirements","isSetSupported","push","platform","host","PlatformType","PC","Mac","OfficeOnline","HostType","Excel","checkPlatformCompatibility","apiService","isCheckingApiKey","hasAutoRedirected","setupEventListeners","testConnectionButton","getElementById","addEventListener","handleTestConnection","clearApiKeysButton","handleClearApiKeys","continueToMenuButton","showAgentsView","apiKeyInput","event","showAuthView","authView","agentsView","style","display","classList","add","setTimeout","hasStoredKey","checkForStoredApiKey","statusMessageContainer","continueToMenuContainer","apiKeyInputContainer","authHeader","querySelector","authInstructions","textContent","innerHTML","continueButton","createElement","className","appendChild","updateActionButtonLabels","checkApiKeyStatus","_handleTestConnection","_apiKeyInput$value","isValid","_authHeader","_authInstructions","_apiKeyInputContainer","showAuthError","setApiKey","toggleAuthLoadingState","testApiConnection","clearAuthError","showAuthSuccess","clearApiKey","_testApiConnection","testConnection","errorElement","color","isLoading","button","spinner","setAttribute","removeAttribute","oldBackButton","container","agentsByCategory","categories","forEach","agent","groupAgentsByCategory","_loop","_Object$entries$_i","_Object$entries","_i","agents","categoryElement","titleElement","agentCard","card","title","meta","formula","example","position","copyButton","top","right","onclick","stopPropagation","clipboard","writeText","catch","err","usageSection","usageHeading","examplesList","exampleItem","topicElement","promptContainer","promptElement","createAgentCard","entries","backButtonContainer","backButton","populateAgentsList","showBrowserWarning","warningDiv","insertBefore","firstChild","showApiSupportWarning","warningHtml","issue","existingWarning","nextSibling","onReady","_ref","apiSupportIssues","initialize","URL"],"sourceRoot":""}